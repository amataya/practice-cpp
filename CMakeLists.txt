cmake_minimum_required(VERSION 3.12)

project(practice LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)

if (CMAKE_CXX_COMPILER_ID MATCHES "Clang|AppleClang|GNU")
    add_compile_options(-Wall -Wextra -Wunreachable-code -Wpedantic -Wno-unused-variable -Wno-sign-compare)
    set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} -pthread)
    message("Compiler options set for Clang|AppleClang|GNU")
endif()
if (CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    add_compile_options(-Wweak-vtables -Wexit-time-destructors -Wglobal-constructors -Wmissing-noreturn )
    message("Compiler options set for Clang")
endif()
if (CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
    add_compile_options(/W4 /w44265 /w44061 /w44062 )
    message("Compiler options set for MSVC")
endif()

# Add Executables below
# Codility
add_executable(premcheck check_is_permutation.cpp)
add_executable(maxbinarygap max_binary_gap.cpp)
add_executable(intersections disc_intersections.cpp)
add_executable(smallnon smallest_absent_num.cpp)
add_executable(frogriverone frog_river_one.cpp)
add_executable(ocr ocr_similar.cpp)
add_executable(coinsum coin_adjacency_sum.cpp)

# Essential
add_library(libbt STATIC binary_tree.cpp)

add_executable(bfsgraph graph_bfs_traversal.cpp)
add_executable(dfsgraph graph_dfs_traversal.cpp)
add_executable(dijkstra graph_dijkstra_shortest_path.cpp)
add_executable(binary_tree binary_tree_app.cpp)
target_link_libraries(binary_tree libbt)

# Other
add_executable(wtjbsched weighted_job_scheduling.cpp)
add_executable(formatnum format_number_into_currency.cpp)
add_executable(revsent reverse_sentence.cpp)
add_executable(wayssum count_ways_of_sum.cpp)
add_executable(avggroup average_of_groups.cpp)
add_executable(firstoccr first_occurrence_of_number.cpp)
add_executable(missingwrd find_missing_words.cpp)
add_executable(valtriangle array_values_form_triangle.cpp)
add_executable(firstunique first_unique_number.cpp)
add_executable(lexiorder lexicographic_ordering_numbers.cpp)

# LeetCode
add_executable(lc443 lc443_string_compression.cpp)
add_executable(lc118 lc118_pascal_triangle.cpp)
add_executable(lc722 lc722_remove_comments.cpp)
add_executable(lc070 lc070_climbing_stairs.cpp)
add_executable(lc001 lc001_two_sum.cpp)
add_executable(lc200 lc200_number_of_islands.cpp)
add_executable(lc657 lc657_robot_return_origin.cpp)
add_executable(lc015 lc015_3Sum.cpp)
add_executable(lc004 lc004_median_two_sorted_arrays.cpp)
add_executable(lc008 lc008_string_to_integer.cpp)
add_executable(lc011 lc011_container_with_most_water.cpp)
add_executable(lc461 lc461_hamming_distance.cpp)
add_executable(lc344 lc344_reverse_string.cpp)
add_executable(lc412 lc412_fizz_buzz.cpp)
add_executable(lc206 lc206_reverse_linked_list.cpp)
add_executable(lc122 lc122_best_time_to_buy_sell_stock_2.cpp)
add_executable(lc242 lc242_valid_anagram.cpp)
add_executable(lc121 lc121_best_time_to_buy_sell_stocks_1.cpp)
add_executable(lc141 lc141_linked_list_cycle.cpp)
add_executable(lc204 lc204_count_primes.cpp)
add_executable(lc053 lc053_maximum_subarray.cpp)
add_executable(lc387 lc387_first_unique_character.cpp)
add_executable(lc441 lc441_arranging_coins.cpp)
add_executable(lc020 lc020_valid_parentheses.cpp)
add_executable(lc941 lc941_valid_mountain_array.cpp)
add_executable(lc017 lc017_letter_combination_phone_number.cpp)
add_executable(lc322 lc322_coin_change.cpp)
add_executable(lc007 lc007_reverse_integer.cpp)
add_executable(lc088 lc088_merge_sorted_array.cpp)
add_executable(lc021 lc021_merge_two_sorted_lists.cpp)
add_executable(lc026 lc026_remove_duplicates_sorted_array.cpp)
add_executable(lc582 lc582_kill_process.cpp)
add_executable(lc692 lc692_top_k_frequent_words.cpp)
add_executable(lc628 lc628_maximum_product_three_numbers.cpp)

add_executable(lc111 lc111_minimum_depth_binary_tree.cpp)
target_link_libraries(lc111 libbt)

add_executable(lc104 lc104_maximum_depth_binary_tree.cpp)
target_link_libraries(lc104 libbt)

add_executable(lc098 lc098_is_valid_bst.cpp)
target_link_libraries(lc098 libbt)

add_executable(lc236 lc236_lowest_common_ancestor_binary_tree.cpp)
target_link_libraries(lc236 libbt)

add_executable(lc235 lc235_lowest_common_ancestor_bst.cpp)
target_link_libraries(lc235 libbt)

add_executable(lc230 lc230_kth_smallest_element_in_bst.cpp)
target_link_libraries(lc230 libbt)